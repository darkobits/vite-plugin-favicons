import type { FaviconOptions } from 'favicons'
import type { DeepPartial, ValueOf, Writable } from 'ts-essentials'

/**
 * See https://github.com/itgalaxy/favicons/blob/v7.0.2/src/config/defaults.ts
 * for a reference to `favicons` type definitions.
 */

/**
 * List of valid platform names / icon types accepted by favicons. Should be
 * identical to `favicons` `PlatformName` type, which was made a private type in
 * version 7.0.0.
 */
type FaviconsIconTypes = keyof NonNullable<FaviconOptions['icons']>;

/**
 * This should be similar to the `IconOptions` type from `favicons`, which was
 * made private in version 7.0.0. All options here are optional and writable.
 */
type FaviconsIconOptions = Writable<Partial<Exclude<ValueOf<NonNullable<FaviconOptions['icons']>>, Array<string> | boolean>>>;

/**
 * Options accepted by this plugin.
 */
export interface FaviconsPluginOptions extends DeepPartial<FaviconOptions> {
  /**
   * Whether to inject the HTML fragments generated by `favicons` into the
   * Vite compilation's HTML document.
   *
   * @default `true`
   */
  inject?: boolean

  /**
   * Whether to cache generated assets for faster subsequent builds.
   *
   * @default `true`
   */
  cache?: boolean

  /**
   * Options for rendering supported icon types. Keys should be supported icon
   * types from `favicons` and values should be an object containing a `source`
   * and any other properties from `favicons` IconOptions type.
   */
  icons: {
    [K in FaviconsIconTypes]?: FaviconsIconOptions & {
      /**
      * Source image to use for this icon type.
      */
      source: string
    };
  }
}

/**
 * Object used to describe a file emitted to a Vite compilation.
 */
export interface EmittedViteFile {
  /**
   * ID assigned to the emitted file by Vite.
   */
  id: string

  /**
   * Original file name.
   */
  name: string

  /**
   * Name that will be used for the file in the compilation.
   */
  resolvedName: string
}

export interface JobConfig {
  source: string
  iconType: keyof FaviconOptions['icons']
  config: FaviconOptions['icons'][this['iconType']]
}

export interface AndroidManifest {
  name: string
  short_name: string
  description: string
  dir: string
  lang: string
  display: string
  orientation: string
  start_url: string
  background_color: string
  theme_color: string
  icons: Array<{
    src: string
    sizes: string
    type: string
  }>
}

export interface FirefoxManifest {
  version: string
  name: string
  description: string
  icons: Record<string, string>
  developer: {
    name: string
    url: string
  }
}

/**
 * Copied from parse5 because they don't include it in their ESM export map.
 */
export interface Attribute {
  /** The name of the attribute. */
  name: string
  /** The namespace of the attribute. */
  namespace?: string
  /** The namespace-related prefix of the attribute. */
  prefix?: string
  /** The value of the attribute. */
  value: string
}